<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"  
	xmlns:jee="http://www.springframework.org/schema/jee" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd">
	
	<!-- Spring整合Mybatis -->
	
	<!-- 加载db.properties文件 -->
	<util:properties id="db" location="classpath:config/db.properties"></util:properties>
	
	<!-- 创建数据库连接池 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="#{db.driverName}"/>
		<property name="url" value="#{db.url}"/>
		<property name="username" value="#{db.username}"/>
		<property name="password" value="#{db.password}"/>
		<property name="maxActive" value="#{db.maxActive}"/>
		<property name="maxWait" value="#{db.maxWait}"/>
		<property name="initialSize" value="#{db.initSize}"/>
	</bean>
	
	<!-- 配置SqlSessionFactory -->
	<bean id="ssf" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 指定连接池 -->
		<property name="dataSource" ref="dataSource"/>
		<!-- 指定映射文件 -->
		<property name="mapperLocations" value="classpath:mappers/*.xml"></property>
	</bean>
	
	<!-- 
		配置MapperScannerConfigurer扫描指定包及其子包下面的所有Mapper映射器(用于配置持久层接口在哪里)
		然后调用SqlSession的getMapper方法,并把方法的返回值(也就是实现了Mapper映射器接口要求的对象)放到
		Spring容器里面(默认id是字母小写之后的接口名)
	 -->
	 <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	 	<property name="basePackage" value="com.gk.retailers.mapper.*"></property>
	 </bean>
	 
	 <!-- 声明式事务 Spring事务管理 -->
	 <!-- 控制事务需要连接的对象,所有要连接jdbc的事务 -->
	 <bean id="txManage" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	 	<property name="dataSource" ref="dataSource"/>
	 </bean>
	 
	 <!-- 设置注解驱动的事务管理(启动事务管理让 id="txManage"来管理) -->
	 <tx:annotation-driven transaction-manager="txManage"/>
	 
</beans>